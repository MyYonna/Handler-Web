<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		                   http://www.springframework.org/schema/tx 
		                   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		                   http://www.springframework.org/schema/jee 
		                   http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
		                   http://www.springframework.org/schema/aop 
		                   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		                   http://www.springframework.org/schema/task
		                   http://www.springframework.org/schema/task/spring-task-4.0.xsd
		                   http://www.springframework.org/schema/context 
		                   http://www.springframework.org/schema/context/spring-context-4.0.xsd"

	default-lazy-init="false">

	<!-- 属性文件读入 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:redis-manager-config.properties</value>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy/>
	<!-- 自动扫描组件，这里要把controler下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="org.handler.property.redis.*">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- SpringMVC上传文件时,需配置MultipartResolver处理器 -->

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 指定所上传文件的总大小不能超过80M......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和 -->

		<property name="maxUploadSize" value="80000000" />

	</bean>



	<!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->

	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 -->

	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">

		<property name="exceptionMappings">

			<props>

				<!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->

				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>

			</props>

		</property>

	</bean>


</beans>